#!/usr/local/bin/expect -f
# Use DEVICE env variable
# error out if it doesn't exist
if {[info exists env(DEVICE)]} {
	set device $env(DEVICE)
} else {
	puts stderr "Invalid Usage: `DEVICE` environment variable was not defined."	
}

# Use TIMEOUT env variable if exists
# Timeout for booting device (commands)
set boot_timeout 300
if {[info exists env(TIMEOUT)]} {
	set boot_timeout $env(TIMEOUT)
}
# Timeout for test commands
set CMD_TIMEOUT 60
# Regex expression for commandline prompt
set CMDLINE_RE {root@(?:\w+-cidev)?:~ #}

# Log results to a file
log_file -noappend $device.boot.log
# Don't display current state
#log_user 0
#Enable expect debugging prints
#exp_internal 1

proc run_all_tests {} {
	# Should be overriden by tests.exp
}

source "power.exp"
# should put all tests here
if {[file exists "tests.exp"]} {
	source "tests.exp"
}
# Provides power related functions:
# power_on - turn on a device
# power_off - turn off a device
# handle_err - send an error and turn off the device

proc do_login {} {
	global CMD_TIMEOUT CMDLINE_RE
	# Decrease timeout
	set timeout $CMD_TIMEOUT
	# Login as "root", no password should be required
	send "root\r"
	# Expect the prompt (should be "root@HOSTNAME:~ #")
	expect -re $CMDLINE_RE {
		# Turn off device
		run_all_tests
		send "poweroff\r"
		# Exit prompt when poweroff complete
		expect -re {Uptime: (?:\d+m)?\d+s} {
			send "\r~.\r"
			expect eof
		}
	}
}

# Assumes no one else is using it
spawn console -f $device
power_on $device

# Verify that the serial port is opened successfully
expect {
	"Connected" {}
	# Either "all ports busy" (serial port is in use)
	# or "link down" (serial port doesn't exist)
	# occured.
	eof { handle_err $device "could not open serial port $port"}
}
set timeout $boot_timeout
expect {
	timeout { handle_err $device "Timeout occured after $boot_timeout seconds when waiting for 'login: ' prompt." }
	# Skip the autoboot timer if it appears
	{hit \[Enter\] to boot or any other key to stop} {
		send "\r\n"
		expect "login: " { do_login }
	}
	"login: " { do_login }
}
power_off $device
